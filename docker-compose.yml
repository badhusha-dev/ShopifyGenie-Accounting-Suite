version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: shopifygenie-postgres
    environment:
      POSTGRES_DB: shopifygenie_accounting
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - shopifygenie-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: shopifygenie-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - shopifygenie-network

  # Backend API Server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: shopifygenie-server
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/shopifygenie_accounting
      - REDIS_URL=redis://redis:6379
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./server/uploads:/app/uploads
      - ./server/logs:/app/logs
    networks:
      - shopifygenie-network
    restart: unless-stopped

  # Frontend Client
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: shopifygenie-client
    ports:
      - "5173:5173"
    depends_on:
      - server
    networks:
      - shopifygenie-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: shopifygenie-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - client
      - server
    networks:
      - shopifygenie-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  shopifygenie-network:
    driver: bridge
